<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:MyMoneyComps="MyMoneyComps.*" creationComplete="init();" width="100%">
	<mx:Script>
		<![CDATA[
			import events.AdicionarCompromissoEvent;
			import util.AlertManager;
			import events.AdicionarTransacaoEvent;
			import events.CadastrarContaEvent;
			import events.CadastrarUsuarioEvent;
			import remote.RemoteFacade;
			import events.DoLogoutEvent;
			import events.DoLoginEvent;
			import mx.rpc.events.ResultEvent;			
			import events.GerarRelatorioEvent;
			
			private function init():void {
				loginBox.addEventListener(DoLoginEvent.LOGADO, doLoginHandler);
				loginBox.addEventListener(DoLoginEvent.CADASTRO, cadastrarUsuarioHandler);
				homeBox.addEventListener(DoLogoutEvent.LOGOUT, doLogoutHandler);
				homeBox.addEventListener(CadastrarContaEvent.CADASTRAR, cadastrarContaHandler);
				homeBox.addEventListener(AdicionarTransacaoEvent.ADICIONAR, adicionarTransacaoHandler);
				homeBox.addEventListener(AdicionarCompromissoEvent.ADICIONAR, adicionarCompromissoHandler);
				homeBox.addEventListener(GerarRelatorioEvent.GERARRELATORIO,gerarRelatorioHandler); 
				cadastrarUsuarioBox.addEventListener(CadastrarUsuarioEvent.CANCELAR, cancelarCadastroUsuarioHandler);
				cadastrarUsuarioBox.addEventListener(CadastrarUsuarioEvent.CADASTRADO, usuarioCadastradoHandler);
				cadastrarContaBox.addEventListener(CadastrarContaEvent.CADASTRADA, contaCadastradaHandler);
				cadastrarContaBox.addEventListener(CadastrarContaEvent.CANCELAR, cancelarCadastrarContaHandler);
				addTransacaoBox.addEventListener(AdicionarTransacaoEvent.ADICIONADA, transacaoAdicionadaHandler);
				addTransacaoBox.addEventListener(AdicionarTransacaoEvent.CANCELADA, cancelarAddTransacaoHandler);
				gerarRelatorioBox.addEventListener(GerarRelatorioEvent.CANCELAR, cancelarGerarRelatorioHandler);
				addCompromissoBox.addEventListener(AdicionarCompromissoEvent.CANCELADO, cancelarAddCompromissoHandler);
				
				AlertManager.init();
				
				// utilizado pelo Selenium
				ExternalInterface.addCallback("cleanAll", cleanAll);
			}
			
			public function cleanAll():void {
				RemoteFacade.getInstance().cleanAll();
			} 
			
			
			// Handlers of DoLogin screen
			private function doLoginHandler(e:DoLoginEvent):void {			
				AlertManager.showString("Seja bem-vindo!");
				homeBox.atualiza();
				mainViewStack.selectedChild = homeBox;
			}
			private function cadastrarUsuarioHandler(e:DoLoginEvent):void {
				mainViewStack.selectedChild=cadastrarUsuarioBox;
			}


			// Handlers of Home screen
			private function doLogoutHandler(e:DoLogoutEvent):void {			
				AlertManager.showString("Até mais!");			
				mainViewStack.selectedChild = loginBox;
			}
			private function cadastrarContaHandler(e:CadastrarContaEvent):void {
				mainViewStack.selectedChild = cadastrarContaBox;
			}
			private function adicionarTransacaoHandler(e:AdicionarTransacaoEvent):void {
				mainViewStack.selectedChild = addTransacaoBox;
			}
			private function adicionarCompromissoHandler(e:AdicionarCompromissoEvent):void {
				mainViewStack.selectedChild = addCompromissoBox;
			}
			
			// Handlers of CadastrarUsuario screen
			private function cancelarCadastroUsuarioHandler(e:CadastrarUsuarioEvent):void {
				mainViewStack.selectedChild=loginBox;
			}
			private function usuarioCadastradoHandler(e:CadastrarUsuarioEvent):void {				
				AlertManager.showString("Usuário cadastrado com sucesso!");
				mainViewStack.selectedChild=loginBox;	
			}			
			
			
			// Handlers of CadastrarConta screen
			private function contaCadastradaHandler(e:CadastrarContaEvent):void {
				AlertManager.showString("Conta cadastrada com sucesso!");
				homeBox.atualiza();
				mainViewStack.selectedChild = homeBox;
			}
			private function cancelarCadastrarContaHandler(e:CadastrarContaEvent):void {
				mainViewStack.selectedChild = homeBox;
			}
			
			// Handlers of AdicionarTransacao screen
			private function transacaoAdicionadaHandler(e:AdicionarTransacaoEvent):void {
				homeBox.atualiza();
				mainViewStack.selectedChild = homeBox;
			}
			private function cancelarAddTransacaoHandler(e:AdicionarTransacaoEvent):void {
				mainViewStack.selectedChild = homeBox;
			}
			
			// Handlers of GerarRelatorio screen
			private function gerarRelatorioHandler(e:GerarRelatorioEvent):void{
				mainViewStack.selectedChild = gerarRelatorioBox;
			}
			private function cancelarGerarRelatorioHandler(e:GerarRelatorioEvent):void{
				homeBox.atualiza();
				mainViewStack.selectedChild = homeBox;
			}
			
			// Handlers of AdicionarCompromisso screen
			private function cancelarAddCompromissoHandler(e:AdicionarCompromissoEvent):void {
				mainViewStack.selectedChild = homeBox;
			}
			
		]]>
	</mx:Script>
	<mx:VBox horizontalAlign="center" verticalAlign="middle" width="100%" height="100%">
		<mx:ViewStack id="mainViewStack" selectedIndex="0" width="754" height="490">
			<MyMoneyComps:DoLogin id="loginBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%"/>
			<MyMoneyComps:CadastrarUsuario id="cadastrarUsuarioBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%"/>
			<MyMoneyComps:Home id="homeBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%"/>
			<MyMoneyComps:CadastrarConta id="cadastrarContaBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" />
			<MyMoneyComps:AdicionarTransacao id="addTransacaoBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" />
			<MyMoneyComps:AdicionarCompromisso id="addCompromissoBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" />
			<MyMoneyComps:GerarRelatorio id="gerarRelatorioBox" horizontalAlign="center" verticalAlign="middle" width="100%" height="100%" />
		</mx:ViewStack>	
	</mx:VBox>
</mx:Application>
